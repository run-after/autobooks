{"version":3,"sources":["scripts/taskFactory.js","scripts/formatTime.js","App.js","index.js"],"names":["taskFactory","startTime","startTimeString","endTime","endTimeString","duration","description","formatTime","time","min","Math","floor","sec","centiSec","milSec","toString","padStart","App","initialTasks","sessionStorage","length","content","JSON","parse","interval","useState","tasks","setTasks","timeStart","timer","setTimer","startTimer","e","preventDefault","task","target","parentNode","dataset","activity","Date","toLocaleString","value","descriptionBox","endBtn","document","createElement","classList","add","addEventListener","endTimer","textContent","appendChild","getTime","setInterval","querySelector","disabled","clearInterval","remove","setItem","stringify","className","map","index","obj","data-activity","onSubmit","required","type","placeholder","displayTask","onClick","tempTasks","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.014764c0.chunk.js","sourcesContent":["const taskFactory = () => {\n  return (\n    {\n      startTime: null,\n      startTimeString: null,\n      endTime: null,\n      endTimeString: null,\n      duration: null,\n      description: null\n    }\n  );\n};\n\nexport default taskFactory;","const formatTime = (time) => {\n  // Not sure how long I should format the timer, but this just\n  // formats it up to 1 hr. Could format it longer if needed\n\n  let min = Math.floor(time / 60000);\n  if (min > 59) {\n    min = min % 60;\n  };\n  let sec = Math.floor(time / 1000);\n  if (sec > 59) {\n    sec = sec % 60;\n  };\n  let centiSec = Math.floor(time / 100);\n  if (centiSec > 10) {\n    centiSec = centiSec % 10;\n  };\n  let milSec = Math.floor(time / 10);\n  if (milSec > 10) {\n    milSec = milSec % 10;\n  };\n  return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}:${centiSec}${milSec}`;\n};\n\nexport default formatTime;","import './App.css';\nimport { useState } from 'react';\nimport taskFactory from './scripts/taskFactory';\nimport formatTime from './scripts/formatTime';\n\nfunction App() {\n\n  let initialTasks;\n  if (sessionStorage.length < 1) {\n    initialTasks = { content: [] };\n  } else {\n    initialTasks = JSON.parse(sessionStorage['tasks']);\n  };\n\n  const [tasks, setTasks] = useState(initialTasks);\n\n  const addTask = (e) => {\n    e.target.disabled = true;\n    let tempTasks = tasks.content;\n    tempTasks.push(\n      taskFactory()\n    );\n    \n    setTasks({ content: tempTasks });\n  };\n  \n  const displayTask = (obj, index) => {\n    return (\n      <div className='row' key={index} data-activity={index}>\n        <div className='start-time'>{obj.startTime && obj.startTimeString}</div>\n        <div className='end-time'>{obj.endTime && obj.endTimeString}</div>\n        <div className='duration'>\n          {\n            (!obj.duration &&\n            formatTime(timer.time)) ||\n            formatTime(obj.duration)\n          }\n        </div>\n        <div className='description'>\n          {\n            obj.description ||\n            <form onSubmit={startTimer}>\n              <textarea required type='textarea' placeholder='Type your description' />\n              <button type='submit'>Start</button>\n            </form>\n          }\n        </div>\n      </div>\n    );\n  };\n\n  const [timer, setTimer] = useState({\n    timeStart: 0,\n    time: 0\n  });\n\n  let interval;\n\n  const startTimer = (e) => {\n    e.preventDefault();\n\n    // selects task from tasks object\n    const task = tasks.content[e.target.parentNode.parentNode.dataset.activity];\n    // sets start time in object\n    task.startTime = new Date();\n    task.startTimeString = task.startTime.toLocaleString()\n\n    const description = e.target[0].value;\n    const descriptionBox = e.target.parentNode;\n    task.description = description;\n\n    const endBtn = document.createElement('button');\n    endBtn.classList.add('end-btn');\n    endBtn.addEventListener('click', endTimer);\n    endBtn.textContent = 'End';\n    \n    descriptionBox.parentNode.appendChild(endBtn);\n\n    let startTime = new Date().getTime();\n    // This updates timer on screen\n    interval = setInterval(() => {\n      setTimer({\n        timeStart: startTime,\n        time: new Date().getTime() - startTime\n      });\n    }, 10);\n  };\n\n  const endTimer = (e) => {\n\n    document.querySelector('.add-btn').disabled = false;\n\n    const task = tasks.content[e.target.parentNode.dataset.activity];\n\n    task.endTime = new Date();\n    task.endTimeString = task.endTime.toLocaleString();\n    task.duration = task.endTime - task.startTime;\n  \n    clearInterval(interval);\n\n    setTimer({\n      timeStart: 0,\n      time: 0\n    });\n  \n    e.target.remove();\n    sessionStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Autobooks\n      </header>\n      <div className='activity-grid'>\n        <div className='row'>\n          <div className='start-time'>Start time</div>\n        <div className='end-time'>End time</div>\n        <div className='duration'>Duration</div>\n        <div className='description'>Description</div>\n        </div>\n        {\n          tasks.content.map((task, index) => {\n            return displayTask(task, index);\n          })\n        }\n      </div>\n      <button className='add-btn' onClick={addTask}>Add</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}